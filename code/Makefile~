CC := mpic++ # This is the main compiler
# CC := clang --analyze # and comment out the linker last line for sanity
SRCDIR := src
BUILDDIR := build
TARGET := bin/scheduler
 
SRCEXT := cpp
SOURCES := $(shell find $(SRCDIR) -type f -name *.$(SRCEXT))
OBJECTS := $(patsubst $(SRCDIR)/%,$(BUILDDIR)/%,$(SOURCES:.$(SRCEXT)=.o))
CFLAGS := -std=c++0x# -Wall
LIB := 
INC := -I include

$(TARGET): $(OBJECTS)
	@mkdir -p bin
	@echo " Linking..."
	@echo " $(CC) $^ -o $(TARGET) $(LIB)"; $(CC) $^ -o $(TARGET) $(LIB)
	@echo " ar rcs libscheduler.a $(filter-out build/Main.o,$^)"; ar rcs bin/libscheduler.a $(filter-out build/Main.o,$^)
	

$(BUILDDIR)/%.o: $(SRCDIR)/%.$(SRCEXT)
	@mkdir -p $(BUILDDIR)
	@mkdir -p $(BUILDDIR)/scheduler
	@mkdir -p $(BUILDDIR)/worker
	@mkdir -p $(BUILDDIR)/datamining
	@mkdir -p $(BUILDDIR)/datamining/grid
	@mkdir -p $(BUILDDIR)/database
	@mkdir -p $(BUILDDIR)/visualiser
	@mkdir -p $(BUILDDIR)/util
	@echo " $(CC) $(CFLAGS) -c -o $@ $<"; $(CC) $(CFLAGS) $(INC) -c -o $@ $<

clean:
	@echo " Cleaning..."; 
	@echo " $(RM) -r $(BUILDDIR) $(TARGET) bin/libscheduler.a"; $(RM) -r $(BUILDDIR) $(TARGET) bin/libscheduler.a

# Tests
tester:
	$(CC) $(CFLAGS) test/tester.cpp $(INC) $(LIB) -o bin/tester
run: 
	mpirun -n 4 bin/scheduler
runbig: 
	mpirun -n 16 bin/scheduler
runsmall:
	mpirun -n 2 bin/scheduler
runtaskstealing:
	mpirun -n 4 bin/scheduler --design taskstealing
runmaster:
	mpirun -n 4 bin/scheduler --design master-worker
.PHONY: clean
